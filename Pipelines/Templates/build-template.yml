parameters:
  - name: DB_NAME
    default: "SpecificationsTesting2"
    type: string
  - name: DB_HOSTNAME
    default: "10.10.10.124"
    type: string
  - name: DB_USERNAME
    default: "xyz"
    type: string
  - name: DB_PASSWORD
    default: "abc"
    type: string

jobs:
 - job: Build_DotNet
   displayName: 'Build DotNet'
   pool:
    vmImage: 'windows-latest'
   steps:
     - task: DotNetCoreCLI@2
       displayName: Restore
       inputs:
         command: 'restore'
         projects: |
            **/*.csproj

     - task: AzureCLI@2
       inputs:
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Construct the connection string
          $newConnectionString = "data source=${{ parameters.DB_HOSTNAME }};initial catalog=${{ parameters.DB_NAME }};user id=${{ parameters.DB_USERNAME }};password=${{ parameters.DB_PASSWORD }};Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True;"

          # Path to the app.config file
          $appConfigPath = "$(Build.SourcesDirectory)/Application/SpecificationsTestingV2/app.config"

          # Read the XML content of app.config
          [xml]$configXml = Get-Content -Path $appConfigPath

          # Get the connectionStrings section
          $connectionStrings = $configXml.configuration.connectionStrings

          # Name of the connection string to update
          $connectionName = "SpecificationsDatabase"

          # Find the existing connection string
          $connectionStringElement = $connectionStrings.add | Where-Object { $_.name -eq $connectionName }

          if ($null -eq $connectionStringElement) {
            # If the connection string doesn't exist, create a new one
            $newElement = $configXml.CreateElement("add")
            $newElement.SetAttribute("name", $connectionName)
            $newElement.SetAttribute("connectionString", $newConnectionString)
            $connectionStrings.AppendChild($newElement) | Out-Null
          } else {
            # If it exists, update its connection string
            $connectionStringElement.SetAttribute("connectionString", $newConnectionString)
          }

          # Save the updated config
          $configXml.Save($appConfigPath)

     - task: DotNetCoreCLI@2
       displayName: Build
       inputs:
         command: 'build'
         projects: '**/*.sln'
         arguments: --configuration $(buildConfiguration)