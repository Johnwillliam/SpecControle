parameters:
  - name: USE_INTEGRATED_SECURITY
    default: "false"
    type: string
  - name: DB_NAME
    default: "SpecificationsTesting2"
    type: string
  - name: DB_HOSTNAME
    default: "10.10.10.124"
    type: string
  - name: DB_USERNAME
    default: "xyz"
    type: string
  - name: DB_PASSWORD
    default: "abc"
    type: string

jobs:
  - job: Publish_DotNet
    displayName: Publish
    pool:
      vmImage: "windows-latest"
    steps:
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: "publish"
          publishWebProjects: false
          projects: |
            **/SpecificationsTestingV2/*.csproj
            !**/*Tests.csproj
          arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
          zipAfterPublish: false

      - pwsh: |
          if ($parameters.USE_INTEGRATED_SECURITY -eq 'true') {
              $useIntegratedSecurity = $true
          } else {
              $useIntegratedSecurity = $false
          }

          if ($useIntegratedSecurity) {
              $newConnectionString = "data source=${{ parameters.DB_HOSTNAME }};initial catalog=${{ parameters.DB_NAME }};Integrated Security=True;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True;"
          } else {
              $newConnectionString = "data source=${{ parameters.DB_HOSTNAME }};initial catalog=${{ parameters.DB_NAME }};user id=${{ parameters.DB_USERNAME }};password=${{ parameters.DB_PASSWORD }};Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True;"
          }

          $appConfigPath = "$(Build.ArtifactStagingDirectory)/SpecificationsTestingV2/SpecificationsTestingV2.dll.config"

          [xml]$configXml = Get-Content -Path $appConfigPath

          $connectionStrings = $configXml.configuration.connectionStrings

          $connectionName = "SpecificationsDatabase"

          $connectionStringElement = $connectionStrings.add | Where-Object { $_.name -eq $connectionName }

          if ($null -eq $connectionStringElement) {
            $newElement = $configXml.CreateElement("add")
            $newElement.SetAttribute("name", $connectionName)
            $newElement.SetAttribute("connectionString", $newConnectionString)
            $connectionStrings.AppendChild($newElement) | Out-Null
          } else {
            $connectionStringElement.SetAttribute("connectionString", $newConnectionString)
          }

          $configXml.Save($appConfigPath)
        displayName: "Update connection string"

      - task: PublishPipelineArtifact@1
        displayName: "Publish Artifact"
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)
          archiveType: "zip"
          artifact: "SpecificationsTesting"

      - pwsh: |
          $url = "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_apis/build/builds/$(Build.BuildId)/artifacts?artifactName=SpecificationsTesting&api-version=6.0"

          try {
              # Make the HTTP request and get the JSON response
              $response = Invoke-RestMethod -Uri $url
              
              # Extract the downloadUrl from the JSON response
              $downloadUrl = $response.downloadUrl

              if ($null -ne $downloadUrl) {
                  # Set the downloadUrl as a pipeline variable
                  Write-Host "##vso[task.setvariable variable=downloadUrl]$downloadUrl"
              } else {
                  Write-Error "downloadUrl not found in the JSON response."
              }
          } catch {
              Write-Error "Failed to retrieve the JSON response from $url. Error: $_"
          }
        displayName: "Get artifact download url"

      - task: SendEmail@1
        inputs:
          To: "mjw-tan@outlook.com"
          From: "mjw-tan@outlook.com"
          Subject: "New build artifact"
          Body: |
            The download URL for the new build artifact is: $(downloadUrl)
            Additional information: $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_apis/build/builds/$(Build.BuildId)/artifacts?artifactName=SpecificationsTesting&amp;api-version=6.0
          BodyAsHtml: false
          AddAttachment: false
          SmtpServer: "smtp.gmail.com"
          SmtpUsername: "mjw.tan@gmail.com"
          SmtpPassword: "xjxoffnoastbrudf"
